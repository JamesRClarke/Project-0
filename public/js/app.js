"use strict";console.log("JS Loaded"),$(function(){function e(){var e=[Math.floor(Math.random()*k.length)],t=k[e];return k.splice(e,1),t}function t(e){return e.split("").sort(function(){return.5-Math.random()}).join("")}function a(){var e=$('<p class="anagram"></p>'),t=Math.ceil(600*Math.random());return e.css({left:t}),e}function o(){$(".anagram").each(function(){Math.round($(this).position().top)>=462&&(console.log("working"),d.html("Lives Left: "+(c-=1)),$(this).css("color","red"),$(this).addClass("animated hinge"))})}function r(){var r=e(),n=t(r),s=a();s.text(n),s.attr("data-word",r),v.append(s),o(),h=setInterval(function(){s.css("top","+=10px")},1500)}function n(){var r=e(),n=t(r),s=a();s.text(n),s.attr("data-word",r),v.append(s),o(),h=setInterval(function(){s.css("top","+=10px")},1e3)}function s(){var r=e(),n=t(r),s=a();s.text(n),s.attr("data-word",r),v.append(s),o(),h=setInterval(function(){s.css("top","+=10px")},700)}function i(){var r=e(),n=t(r),s=a();s.text(n),s.attr("data-word",r),v.append(s),o(),h=setInterval(function(){s.css("top","+=10px")},200)}function l(){c=5,d.html("Lives: 5"),u=0,f.html("Correct Answers: 0"),$(".anagram").remove()}var c=5,u=0,h=void 0,d=$("#lives"),m=$("#play"),f=$("#winCondition"),b=$("#subject-options"),p=$("#difficulty-options"),v=$(".ag-tetris"),g=$("#instructions"),y={BBT:["sheldon","leanord","spock","cheesecakefactory","howard","startrek","penny","koothrapoli","bernadette","physics","laundry","halonight","dumplings","brisket","nasa","stringtheory","darkmatter","comiccon","comicbook"],LOTR:["arragon","gimli"]},w="",k="";b.on("change",function(){var e=b.val();switch(k=y[e],e){case"BBT":$("body").addClass("imageBBT")}}),p.on("change",function(){switch(w=p.val()){case"easy":g.prepend("<h2>Instructions</h2><p> When a word falls to the bottom of the box you lose a life.<br><br>You need to guess 5 anagrams correctly to beat this game!<br><br>You have 5 lives...Enjoy!</p>");break;case"medium":g.append("<h2>Instructions</h2><p> When a word falls to the bottom of the box you lose a life.<br><br>You need to guess 7 anagrams correctly to beat this game!<br><br>You have 5 lives...Enjoy!</p>");break;case"hard":g.append("<h2>Instructions</h2><p> When a word falls to the bottom of the box you lose a life.<br><br>You need to guess 10 anagrams correctly to beat this game!<br><br>You have 5 lives...Enjoy!</p>");break;case"insane":g.append("<h2>Instructions</h2><p> When a word falls to the bottom of the box you lose a life.<br><br>You need to guess  anagrams correctly to beat this game!<br><br>You have 10 lives...Enjoy!</p>")}}),m.on("click",function(){switch(w){case"easy":r();var e=setInterval(function(){u>=5?(alert("You beat the game this time, can you manage a medium difficutly...?"),clearInterval(e),l()):c<=0?(alert("Game Over, sorry you lost, Booooooo!"),l()):r()},1e4);break;case"medium":n();var t=setInterval(function(){u>=7?(alert("You beat the game this time, can you manage a hard difficutly...?"),clearInterval(t),l()):c<=0?(alert("Game Over, sorry you lost, Booooooo!"),l()):n()},7e3);break;case"hard":s();var a=setInterval(function(){u>=10?(alert("You beat the game this time, well thats it, unless you really are insane..."),clearInterval(a),l()):c<=0?(alert("Game Over, sorry you lost, Booooooo!"),l()):s()},5e3);break;case"insane":i();var o=setInterval(function(){u>=10?(alert("You beat the game, like you beat it, beat it erm yeah, grats I guess"),clearInterval(o),l()):c<=0?(alert("Game Over, sorry you lost, Booooooo!"),l()):i()},2500);break;default:alert("Please select a difficulty...")}}),$("form").on("submit",function(e){e.preventDefault(),$(".anagram").each(function(){var e=$(this).data("word");$("#answer").val()===e?(f.html("Correct Answers: "+(u+=1)),$(this).addClass("animated fadeOutLeft").css("color","green"),$(this).css("display","hidden")):$(".anagram").addClass("animated wobble")}),$("form").trigger("reset")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
